name: Multi-Project Build and Release 1
 
on:
  push:
    branches:
      - main
    paths:
       - 'weatherapi/**'
       - 'cicdapi/**'
  pull_request:
    branches:
      - main
    paths:
       - 'wheatherapi/**'
       - 'cicdapi/**'
 
jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      project1_changed: ${{ steps.detect.outputs.project1_changed }}
      project2_changed: ${{ steps.detect.outputs.project2_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Detect changed projects
        id: detect
        run: |
          echo "Detecting modified files compared to previous commit"
          # Get list of changed files between last two commits on branch
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)

          echo "Changed files:"
          echo "$CHANGED_FILES"

          project1_changed=false
          project2_changed=false

          for file in $CHANGED_FILES; do
            if [[ "$file" == "wheatherapi.csproj" ]]; then
              project1_changed=true
            fi
            if [[ "$file" == "cicdapi.csproj" ]]; then
              project2_changed=true
            fi
          done

          # Set outputs for the job only if they are true
          if [ "$project1_changed" = true ]; then
            echo "project1_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project1_changed=false" >> $GITHUB_OUTPUT
          fi

          if [ "$project2_changed" = true ]; then
            echo "project2_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project2_changed=false" >> $GITHUB_OUTPUT
          fi

  build_project1:
    needs: detect_changes
    if: needs.detect_changes.outputs.project1_changed == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
 
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
 
    - name: Restore dependencies - Project 1
      run: dotnet restore ./wheather/wheather/wheatherapi.csproj
 
    - name: Build - Project 1
      run: dotnet build ./wheather/wheather/wheatherapi.csproj --configuration Release --no-restore
 
    - name: Test - Project 1
      run: dotnet test ./wheather/wheather/wheatherapi.csproj --no-build --verbosity normal
 
  build_project2:
    needs: detect_changes
    if: needs.detect_changes.outputs.project2_changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
 
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
 
    - name: Restore dependencies - Project 2
      run: dotnet restore ./cicdapi/cicdapi.csproj
 
    - name: Build - Project 2
      run: dotnet build ./cicdapi/cicdapi.csproj --configuration Release --no-restore
 
    - name: Test - Project 2
      run: dotnet test ./cicdapi/cicdapi.csproj --no-build --verbosity normal
 
  release:
    needs:
      - detect_changes
      - build_project1
      - build_project2
    if: >
      needs.detect_changes.outputs.project1_changed == 'true' ||
      needs.detect_changes.outputs.project2_changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
 
    - name: Create Release Notes
      run: echo "Release triggered due to changes in projects."
 
    # Example: Create GitHub Release (adjust as needed - requires repo token)
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'push'
      with:
        tag_name: 'v1.${{ github.run_number }}'
        name: 'Automated Release v1.${{ github.run_number }}'
        body: 'This release contains builds for updated projects.'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
    # You can add artifact publishing, deployment steps etc. here
